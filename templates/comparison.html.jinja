{% extends "base.html.jinja" %}
{% from "_macros.html.jinja" import link, send_trait, sync_trait %}

{% block title %}Rust Memory Containers - Comparison{% endblock title %}

{% block content %}
<div id="summary-container">
    <div class="margins">
        <h1 class="large-text smart-pointer">Smart Pointers</h1>

        <div class="scroll-horizontal">
            <table>
                <tr>
                    <td class="no-border"></td>
                    <th scope="col"><span class="code smart-pointer">Box</span></th>
                    <th scope="col"><span class="code smart-pointer">Rc</span></th>
                    <th scope="col"><span class="code smart-pointer">Arc</span></th>
                </tr>

                <tr>
                    <th scope="row">Link to Docs</th>
                    <td>
                        {% call link('https://doc.rust-lang.org/std/boxed/struct.Box.html', 'code') -%}
                            std::boxed::<span class='smart-pointer'>Box</span>
                        {%- endcall %}
                    </td>

                    <td>
                        {% call link('https://doc.rust-lang.org/std/rc/struct.Rc.html', 'code') -%}
                            std::rc::<span class='smart-pointer'>Rc</span>
                        {%- endcall %}
                    </td>

                    <td>
                        {% call link('https://doc.rust-lang.org/std/sync/struct.Arc.html', 'code') -%}
                            std::sync::<span class='smart-pointer'>Arc</span></a>
                        {%- endcall %}
                    </td>
                </tr>

                <tr>
                    <th scope="row">Ownership</th>
                    <td>Owned</td>
                    <td>Shared</td>
                    <td>Shared</td>
                </tr>

                <tr>
                    <th scope="row">Access to inner data</th>
                    <td>
                        Extract via {% call link("https://doc.rust-lang.org/std/ops/trait.Deref.html", 'code') -%}
                            Deref
                        {%- endcall %}<br>
                        Immutable via immutable borrow<br>
                        Mutable via mutable borrow<br>
                    </td>
                    <td>Immutable via immutable borrow</td>
                    <td>Immutable</td>
                </tr>

                <tr>
                    <th scope="row">Thread-Safety</th>
                    <td>
                        {{ send_trait() }} if {{ send_trait() }}
                        <br>
                        {{ sync_trait() }} if {{ sync_trait() }}
                    </td>
                    <td>
                        {{ send_trait(true) }} and {{ sync_trait(true) }}
                    </td>
                    <td>
                        {{ send_trait() }} and {{ sync_trait() }} if {{ send_trait() }} <span class='code'>+</span> {{ sync_trait() }}
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <div class="margins">
        <h1 class="large-text interior-mut">Interior Mutability</h1>

        <div class="scroll-horizontal">
            <table>
                <tr>
                    <td class="no-border"></td>
                    <th scope="col"><span class="code interior-mut">Cell</span></th>
                    <th scope="col"><span class="code interior-mut">RefCell</span></th>
                    <th scope="col"><span class="code interior-mut">Mutex</span></th>
                    <th scope="col"><span class="code interior-mut">RwLock</span></th>
                </tr>

                <tr>
                    <th scope="row">Link to Docs</th>
                    <td>
                        {% call link('https://doc.rust-lang.org/std/cell/struct.Cell.html', 'code') -%}
                            std::cell::<span class='interior-mut'>Cell</span>
                        {%- endcall %}
                    </td>

                    <td>
                        {% call link('https://doc.rust-lang.org/std/cell/struct.RefCell.html', 'code') -%}
                            std::cell::<span class='interior-mut'>RefCell</span>
                        {%- endcall %}
                    </td>

                    <td>
                        Sync: {% call link('https://doc.rust-lang.org/std/sync/struct.Mutex.html', 'code') -%}
                            std::sync::<span class='interior-mut'>Mutex</span></a>
                        {%- endcall %}
                        <br>
                        {# todo: grid/flex? #}
                        Async: {% call link('https://docs.rs/tokio/latest/tokio/sync/struct.Mutex.html', 'code') -%}
                            tokio::sync::<span class='interior-mut'>Mutex</span>
                        {%- endcall %}
                        or
                        {% call link('https://docs.rs/async-std/latest/async_std/sync/struct.Mutex.html', 'code') -%}
                            async_std::sync::<span class='interior-mut'>Mutex</span>
                        {%- endcall %}
                    </td>

                    <td>
                        Sync: {% call link('https://doc.rust-lang.org/std/sync/struct.RwLock.html', 'code') -%}
                            std::sync::<span class='interior-mut'>RwLock</span></a>
                        {%- endcall %}
                        <br>
                        {# todo: grid/flex? #}
                        Async: {% call link('https://docs.rs/tokio/latest/tokio/sync/struct.RwLock.html', 'code') -%}
                            tokio::sync::<span class='interior-mut'>RwLock</span>
                        {%- endcall %}
                        or
                        {% call link('https://docs.rs/async-std/latest/async_std/sync/struct.RwLock.html', 'code') -%}
                            async_std::sync::<span class='interior-mut'>RwLock</span>
                        {%- endcall %}
                    </td>
                </tr>

                <tr>
                    <th scope="row">Access to inner data</th>
                    <td>Copy, Move</td>
                    <td>Many immutable OR Singular mutable via immutable borrow</td>
                    <td>Singular mutable via immutable borrow</td>
                    <td>Many immutable OR Singular mutable via immutable borrow</td>
                </tr>

                <tr>
                    <th scope="row">Thread-Safety</th>
                    <td>
                        {{ send_trait(true) }} and {{ sync_trait(true) }}
                    </td>
                    <td>
                        {{ send_trait(true) }} and {{ sync_trait(true) }}
                    </td>
                    <td>
                        {{ send_trait() }} and {{ sync_trait() }} if {{ send_trait() }}
                    </td>
                    <td>
                        {{ send_trait() }} and {{ sync_trait() }} if {{ send_trait() }} <span class='code'>+</span> {{ sync_trait() }}
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>
{% endblock content %}
